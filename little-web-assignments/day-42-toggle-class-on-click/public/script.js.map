{"version":3,"sources":["script.js"],"names":["mountNode","document","querySelector","AppComponent","state","toggle","setState","toggleMe","React","Component","ReactDOM","render"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAYC,SAASC,aAAT,CAAuB,aAAvB,CAAhB;;IAEMC,Y;;;AACJ,0BAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa,EAAEC,QAAQ,MAAV,EAAb;AAFY;AAGb;;;;+BACU;;AAET,UAAI,KAAKD,KAAL,CAAWC,MAAX,KAAsB,MAA1B,EAAkC;AAChC,aAAKC,QAAL,CAAc;AACZD,kBAAQ;AADI,SAAd;AAGD,OAJD,MAIO;AACL,aAAKC,QAAL,CAAc;AACZD,kBAAQ;AADI,SAAd;AAGD;AAEF;;;6BACQ;AAAA;;AACP,aAAO;AAAA;AAAA,UAAK,WAAW,KAAKD,KAAL,CAAWC,MAA3B,EAAmC,SAAS,mBAAM;AAAC,mBAAKE,QAAL;AAAgB,WAAnE;AAAA;AAAA,OAAP;AACD;;;;EApBwBC,MAAMC,S;;AAuBjCC,SAASC,MAAT,CAAgB,oBAAC,YAAD,OAAhB,EAAkCX,SAAlC","file":"script.js","sourcesContent":["var mountNode = document.querySelector('#react-root');\n\nclass AppComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = { toggle: \"divy\" }\n  }\n  toggleMe() {\n\n    if (this.state.toggle === \"divy\") {\n      this.setState({\n        toggle: \"divy on\"\n      });\n    } else {\n      this.setState({\n        toggle: \"divy\"\n      });\n    }\n\n  }\n  render() {\n    return <div className={this.state.toggle} onClick={() => {this.toggleMe()}}>Click Me!</div>;\n  }\n}\n\nReactDOM.render(<AppComponent />, mountNode);\n"]}