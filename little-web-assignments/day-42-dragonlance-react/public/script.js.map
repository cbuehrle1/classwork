{"version":3,"sources":["script.js"],"names":["mountNode","document","querySelector","Thingy","props","char","name","race","description","React","Component","AppComponent","state","data","$","ajax","url","done","setState","characters","ajaxCall","map","character","index","ReactDOM","render"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAYC,SAASC,aAAT,CAAuB,aAAvB,CAAhB;;IAEMC,M;;;;;;;;;;;6BACK;AAAE,aAAO;AAAA;AAAA;AACd;AAAA;AAAA,YAAK,WAAU,MAAf;AAAuB,eAAKC,KAAL,CAAWC,IAAX,CAAgBC;AAAvC,SADc;AAEd;AAAA;AAAA,YAAK,WAAU,OAAf;AAAwB,eAAKF,KAAL,CAAWC,IAAX,CAAgBE;AAAxC,SAFc;AAGd;AAAA;AAAA,YAAK,WAAU,OAAf;AAAwB,eAAKH,KAAL,CAAWC,IAAX,CAAgBG;AAAxC;AAHc,OAAP;AAKV;;;;EANkBC,MAAMC,S;;IASrBC,Y;;;AAEJ,0BAAc;AAAA;;AAAA;;AAGZ,WAAKC,KAAL,GAAa;AACXC,YAAM;AACJR,cAAM;AADF;AADK,KAAb;AAHY;AAQb;;;;+BAEU;AAAA;;AACTS,QAAEC,IAAF,CAAO;AACLC,aAAK;AADA,OAAP,EAGCC,IAHD,CAGM,UAACJ,IAAD,EAAU;AACd,eAAKK,QAAL,CAAc;AACZL,gBAAM;AACJR,kBAAMQ,KAAKM;AADP;AADM,SAAd;AAKD,OATD;AAUD;;;6BAEQ;;AAEP,WAAKC,QAAL;;AAEA,aAAO;AAAA;AAAA;AACL;AAAA;AAAA;AACG,eAAKR,KAAL,CAAWC,IAAX,CAAgBR,IAAhB,CAAqBgB,GAArB,CAAyB,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AAAE,mBAAO,oBAAC,MAAD,IAAQ,KAAKA,KAAb,EAAoB,MAAMD,SAA1B,GAAP;AAA+C,WAAhG;AADH;AADK,OAAP;AAMD;;;;EAnCwBb,MAAMC,S;;AAsCjCc,SAASC,MAAT,CAAgB,oBAAC,YAAD,OAAhB,EAAkCzB,SAAlC","file":"script.js","sourcesContent":["var mountNode = document.querySelector('#react-root');\n\nclass Thingy extends React.Component {\n  render() { return <li>\n      <div className=\"name\">{this.props.char.name}</div>\n      <div className=\"items\">{this.props.char.race}</div>\n      <div className=\"items\">{this.props.char.description}</div>\n    </li>\n  }\n}\n\nclass AppComponent extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      data: {\n        char: []\n      }\n    }\n  }\n\n  ajaxCall() {\n    $.ajax({\n      url: \"http://localhost:5003/api/dragonlance\"\n    })\n    .done((data) => {\n      this.setState({\n        data: {\n          char: data.characters\n        }\n      });\n    });\n  }\n\n  render() {\n\n    this.ajaxCall();\n\n    return <div>\n      <ul>\n        {this.state.data.char.map((character, index) => { return <Thingy key={index} char={character} />})}\n      </ul>\n    </div>\n\n  }\n}\n\nReactDOM.render(<AppComponent />, mountNode);\n"]}